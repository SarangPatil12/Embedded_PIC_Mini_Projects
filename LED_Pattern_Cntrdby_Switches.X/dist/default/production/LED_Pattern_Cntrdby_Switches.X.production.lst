

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue May 06 18:39:25 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176     0006                     _PORTBbits      set	6
   177     0008                     _PORTD          set	8
   178     0088                     _TRISD          set	136
   179     0086                     _TRISB          set	134
   180                           
   181                           	psect	cinit
   182     07FC                     start_initialization:	
   183                           ; #config settings
   184                           
   185     07FC                     __initialization:
   186     07FC                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189     07FC                     __end_of__initialization:
   190     07FC  0183               	clrf	3
   191     07FD  120A  118A  2F13   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	cstackCOMMON
   194     0070                     __pcstackCOMMON:
   195     0070                     ?_pattern1:
   196     0070                     ?_pattern2:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0070                     ?_pattern3:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ?_pattern4:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ?_main:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ??_pattern1:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ??_pattern2:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ??_pattern3:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ??_pattern4:	
   218                           ; 1 bytes @ 0x0
   219                           
   220                           
   221                           ; 1 bytes @ 0x0
   222     0070                     	ds	3
   223     0073                     pattern1@i:
   224     0073                     pattern2@i:	
   225                           ; 2 bytes @ 0x3
   226                           
   227                           
   228                           ; 2 bytes @ 0x3
   229     0073                     	ds	2
   230     0075                     pattern1@i_54:
   231     0075                     pattern2@i_57:	
   232                           ; 2 bytes @ 0x5
   233                           
   234                           
   235                           ; 2 bytes @ 0x5
   236     0075                     	ds	2
   237     0077                     ??_main:
   238                           
   239                           	psect	maintext
   240     0713                     __pmaintext:	
   241                           ; 1 bytes @ 0x7
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 48 in file "main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : B00/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   261 ;;      Params:         0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0
   263 ;;      Temps:          0       0       0       0       0
   264 ;;      Totals:         0       0       0       0       0
   265 ;;Total ram usage:        0 bytes
   266 ;; Hardware stack levels required when called: 1
   267 ;; This function calls:
   268 ;;		_pattern1
   269 ;;		_pattern2
   270 ;;		_pattern3
   271 ;;		_pattern4
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277     0713                     _main:	
   278                           ;psect for function _main
   279                           
   280     0713                     l658:	
   281                           ;incstack = 0
   282                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   283                           
   284                           
   285                           ;main.c: 49:         else if (PORTBbits.RB2 == 0) {
   286     0713  300F               	movlw	15
   287     0714  1683               	bsf	3,5	;RP0=1, select bank1
   288     0715  1303               	bcf	3,6	;RP1=0, select bank1
   289     0716  0086               	movwf	6	;volatile
   290     0717                     l660:
   291                           
   292                           ;main.c: 50:             pattern3();
   293     0717  0188               	clrf	8	;volatile
   294                           
   295                           ;main.c: 51:         }
   296     0718  1283               	bcf	3,5	;RP0=0, select bank0
   297     0719  1303               	bcf	3,6	;RP1=0, select bank0
   298     071A  0188               	clrf	8	;volatile
   299     071B                     l662:
   300                           
   301                           ;main.c: 54:         }
   302     071B  1283               	bcf	3,5	;RP0=0, select bank0
   303     071C  1303               	bcf	3,6	;RP1=0, select bank0
   304     071D  1806               	btfsc	6,0	;volatile
   305     071E  2F20               	goto	u91
   306     071F  2F21               	goto	u90
   307     0720                     u91:
   308     0720  2F27               	goto	l36
   309     0721                     u90:
   310     0721                     l664:
   311                           
   312                           ;main.c: 55:         else {
   313     0721  120A  118A  279C  120A  118A  	fcall	_pattern1
   314                           
   315                           ;main.c: 56:             PORTD = 0x00;
   316     0726  2F1B               	goto	l662
   317     0727                     l36:	
   318                           ;main.c: 57:         }
   319                           
   320     0727  1886               	btfsc	6,1	;volatile
   321     0728  2F2A               	goto	u101
   322     0729  2F2B               	goto	u100
   323     072A                     u101:
   324     072A  2F31               	goto	l38
   325     072B                     u100:
   326     072B                     l666:
   327                           
   328                           ;main.c: 58:     }
   329     072B  120A  118A  274A  120A  118A  	fcall	_pattern2
   330                           
   331                           ;main.c: 59: }
   332     0730  2F1B               	goto	l662
   333     0731                     l38:
   334     0731  1906               	btfsc	6,2	;volatile
   335     0732  2F34               	goto	u111
   336     0733  2F35               	goto	u110
   337     0734                     u111:
   338     0734  2F3B               	goto	l40
   339     0735                     u110:
   340     0735                     l668:
   341     0735  120A  118A  26CD  120A  118A  	fcall	_pattern3
   342     073A  2F1B               	goto	l662
   343     073B                     l40:
   344     073B  1986               	btfsc	6,3	;volatile
   345     073C  2F3E               	goto	u121
   346     073D  2F3F               	goto	u120
   347     073E                     u121:
   348     073E  2F45               	goto	l672
   349     073F                     u120:
   350     073F                     l670:
   351     073F  120A  118A  26F0  120A  118A  	fcall	_pattern4
   352     0744  2F1B               	goto	l662
   353     0745                     l672:
   354     0745  0188               	clrf	8	;volatile
   355     0746  2F1B               	goto	l662
   356     0747  120A  118A  2800   	ljmp	start
   357     074A                     __end_of_main:
   358                           
   359                           	psect	text1
   360     06F0                     __ptext1:	
   361 ;; *************** function _pattern4 *****************
   362 ;; Defined at:
   363 ;;		line 41 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0
   379 ;;      Temps:          3       0       0       0       0
   380 ;;      Totals:         3       0       0       0       0
   381 ;;Total ram usage:        3 bytes
   382 ;; Hardware stack levels used: 1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390     06F0                     _pattern4:	
   391                           ;psect for function _pattern4
   392                           
   393     06F0                     l652:	
   394                           ;incstack = 0
   395                           ; Regs used in _pattern4: [wreg]
   396                           
   397                           
   398                           ;main.c: 42:     while(1) {
   399     06F0  300F               	movlw	15
   400     06F1  1283               	bcf	3,5	;RP0=0, select bank0
   401     06F2  1303               	bcf	3,6	;RP1=0, select bank0
   402     06F3  0088               	movwf	8	;volatile
   403     06F4                     l654:
   404                           
   405                           ;main.c: 43:         if (PORTBbits.RB0 == 0) {
   406     06F4  3003               	movlw	3
   407     06F5  00F2               	movwf	??_pattern4+2
   408     06F6  308A               	movlw	138
   409     06F7  00F1               	movwf	??_pattern4+1
   410     06F8  3055               	movlw	85
   411     06F9  00F0               	movwf	??_pattern4
   412     06FA                     u137:
   413     06FA  0BF0               	decfsz	??_pattern4,f
   414     06FB  2EFA               	goto	u137
   415     06FC  0BF1               	decfsz	??_pattern4+1,f
   416     06FD  2EFA               	goto	u137
   417     06FE  0BF2               	decfsz	??_pattern4+2,f
   418     06FF  2EFA               	goto	u137
   419     0700  2F01               	nop2
   420     0701                     l656:
   421                           
   422                           ;main.c: 44:             pattern1();
   423     0701  30F0               	movlw	240
   424     0702  1283               	bcf	3,5	;RP0=0, select bank0
   425     0703  1303               	bcf	3,6	;RP1=0, select bank0
   426     0704  0088               	movwf	8	;volatile
   427                           
   428                           ;main.c: 45:         }
   429     0705  3003               	movlw	3
   430     0706  00F2               	movwf	??_pattern4+2
   431     0707  308A               	movlw	138
   432     0708  00F1               	movwf	??_pattern4+1
   433     0709  3055               	movlw	85
   434     070A  00F0               	movwf	??_pattern4
   435     070B                     u147:
   436     070B  0BF0               	decfsz	??_pattern4,f
   437     070C  2F0B               	goto	u147
   438     070D  0BF1               	decfsz	??_pattern4+1,f
   439     070E  2F0B               	goto	u147
   440     070F  0BF2               	decfsz	??_pattern4+2,f
   441     0710  2F0B               	goto	u147
   442     0711  2F12               	nop2
   443     0712                     l30:
   444     0712  0008               	return
   445     0713                     __end_of_pattern4:
   446                           
   447                           	psect	text2
   448     06CD                     __ptext2:	
   449 ;; *************** function _pattern3 *****************
   450 ;; Defined at:
   451 ;;		line 34 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          3       0       0       0       0
   468 ;;      Totals:         3       0       0       0       0
   469 ;;Total ram usage:        3 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478     06CD                     _pattern3:	
   479                           ;psect for function _pattern3
   480                           
   481     06CD                     l646:	
   482                           ;incstack = 0
   483                           ; Regs used in _pattern3: [wreg]
   484                           
   485                           
   486                           ;main.c: 35: }
   487     06CD  3055               	movlw	85
   488     06CE  1283               	bcf	3,5	;RP0=0, select bank0
   489     06CF  1303               	bcf	3,6	;RP1=0, select bank0
   490     06D0  0088               	movwf	8	;volatile
   491     06D1                     l648:
   492                           
   493                           ;main.c: 36: 
   494     06D1  3003               	movlw	3
   495     06D2  00F2               	movwf	??_pattern3+2
   496     06D3  308A               	movlw	138
   497     06D4  00F1               	movwf	??_pattern3+1
   498     06D5  3055               	movlw	85
   499     06D6  00F0               	movwf	??_pattern3
   500     06D7                     u157:
   501     06D7  0BF0               	decfsz	??_pattern3,f
   502     06D8  2ED7               	goto	u157
   503     06D9  0BF1               	decfsz	??_pattern3+1,f
   504     06DA  2ED7               	goto	u157
   505     06DB  0BF2               	decfsz	??_pattern3+2,f
   506     06DC  2ED7               	goto	u157
   507     06DD  2EDE               	nop2
   508     06DE                     l650:
   509                           
   510                           ;main.c: 37: void main() {
   511     06DE  30AA               	movlw	170
   512     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   513     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   514     06E1  0088               	movwf	8	;volatile
   515                           
   516                           ;main.c: 38:     TRISB = 0x0F;
   517     06E2  3003               	movlw	3
   518     06E3  00F2               	movwf	??_pattern3+2
   519     06E4  308A               	movlw	138
   520     06E5  00F1               	movwf	??_pattern3+1
   521     06E6  3055               	movlw	85
   522     06E7  00F0               	movwf	??_pattern3
   523     06E8                     u167:
   524     06E8  0BF0               	decfsz	??_pattern3,f
   525     06E9  2EE8               	goto	u167
   526     06EA  0BF1               	decfsz	??_pattern3+1,f
   527     06EB  2EE8               	goto	u167
   528     06EC  0BF2               	decfsz	??_pattern3+2,f
   529     06ED  2EE8               	goto	u167
   530     06EE  2EEF               	nop2
   531     06EF                     l27:
   532     06EF  0008               	return
   533     06F0                     __end_of_pattern3:
   534                           
   535                           	psect	text3
   536     074A                     __ptext3:	
   537 ;; *************** function _pattern2 *****************
   538 ;; Defined at:
   539 ;;		line 23 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  i               2    5[COMMON] int 
   544 ;;  i               2    3[COMMON] int 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         4       0       0       0       0
   556 ;;      Temps:          3       0       0       0       0
   557 ;;      Totals:         7       0       0       0       0
   558 ;;Total ram usage:        7 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567     074A                     _pattern2:	
   568                           ;psect for function _pattern2
   569                           
   570     074A                     l618:	
   571                           ;incstack = 0
   572                           ; Regs used in _pattern2: [wreg+status,2+status,0]
   573                           
   574                           
   575                           ;main.c: 24:     PORTD = 0x55;
   576     074A  3007               	movlw	7
   577     074B  00F3               	movwf	pattern2@i
   578     074C  3000               	movlw	0
   579     074D  00F4               	movwf	pattern2@i+1
   580     074E                     l624:
   581                           
   582                           ;main.c: 25:     _delay((unsigned long)((500)*(4000000/4000.0)));
   583     074E  3001               	movlw	1
   584     074F  00F0               	movwf	??_pattern2
   585     0750  0A73               	incf	pattern2@i,w
   586     0751  2F54               	goto	u54
   587     0752                     u55:
   588     0752  1003               	clrc
   589     0753  0DF0               	rlf	??_pattern2,f
   590     0754                     u54:
   591     0754  3EFF               	addlw	-1
   592     0755  1D03               	skipz
   593     0756  2F52               	goto	u55
   594     0757  0870               	movf	??_pattern2,w
   595     0758  1283               	bcf	3,5	;RP0=0, select bank0
   596     0759  1303               	bcf	3,6	;RP1=0, select bank0
   597     075A  0488               	iorwf	8,f	;volatile
   598     075B                     l626:
   599                           
   600                           ;main.c: 26:     PORTD = ~(0x55);
   601     075B  3003               	movlw	3
   602     075C  00F2               	movwf	??_pattern2+2
   603     075D  308A               	movlw	138
   604     075E  00F1               	movwf	??_pattern2+1
   605     075F  3055               	movlw	85
   606     0760  00F0               	movwf	??_pattern2
   607     0761                     u177:
   608     0761  0BF0               	decfsz	??_pattern2,f
   609     0762  2F61               	goto	u177
   610     0763  0BF1               	decfsz	??_pattern2+1,f
   611     0764  2F61               	goto	u177
   612     0765  0BF2               	decfsz	??_pattern2+2,f
   613     0766  2F61               	goto	u177
   614     0767  2F68               	nop2
   615     0768                     l628:
   616                           
   617                           ;main.c: 27:     _delay((unsigned long)((500)*(4000000/4000.0)));
   618     0768  30FF               	movlw	255
   619     0769  07F3               	addwf	pattern2@i,f
   620     076A  1803               	skipnc
   621     076B  0AF4               	incf	pattern2@i+1,f
   622     076C  30FF               	movlw	255
   623     076D  07F4               	addwf	pattern2@i+1,f
   624     076E                     l630:
   625     076E  1FF4               	btfss	pattern2@i+1,7
   626     076F  2F71               	goto	u61
   627     0770  2F72               	goto	u60
   628     0771                     u61:
   629     0771  2F4E               	goto	l624
   630     0772                     u60:
   631     0772                     l632:
   632                           
   633                           ;main.c: 28: }
   634     0772  3007               	movlw	7
   635     0773  00F5               	movwf	pattern2@i_57
   636     0774  3000               	movlw	0
   637     0775  00F6               	movwf	pattern2@i_57+1
   638     0776                     l638:
   639                           
   640                           ;main.c: 29: 
   641     0776  3001               	movlw	1
   642     0777  00F0               	movwf	??_pattern2
   643     0778  0A75               	incf	pattern2@i_57,w
   644     0779  2F7C               	goto	u74
   645     077A                     u75:
   646     077A  1003               	clrc
   647     077B  0DF0               	rlf	??_pattern2,f
   648     077C                     u74:
   649     077C  3EFF               	addlw	-1
   650     077D  1D03               	skipz
   651     077E  2F7A               	goto	u75
   652     077F  0870               	movf	??_pattern2,w
   653     0780  3AFF               	xorlw	255
   654     0781  1283               	bcf	3,5	;RP0=0, select bank0
   655     0782  1303               	bcf	3,6	;RP1=0, select bank0
   656     0783  0588               	andwf	8,f	;volatile
   657     0784                     l640:
   658                           
   659                           ;main.c: 30: void pattern4() {
   660     0784  3003               	movlw	3
   661     0785  00F2               	movwf	??_pattern2+2
   662     0786  308A               	movlw	138
   663     0787  00F1               	movwf	??_pattern2+1
   664     0788  3055               	movlw	85
   665     0789  00F0               	movwf	??_pattern2
   666     078A                     u187:
   667     078A  0BF0               	decfsz	??_pattern2,f
   668     078B  2F8A               	goto	u187
   669     078C  0BF1               	decfsz	??_pattern2+1,f
   670     078D  2F8A               	goto	u187
   671     078E  0BF2               	decfsz	??_pattern2+2,f
   672     078F  2F8A               	goto	u187
   673     0790  2F91               	nop2
   674     0791                     l642:
   675                           
   676                           ;main.c: 31:     PORTD = 0x0F;
   677     0791  30FF               	movlw	255
   678     0792  07F5               	addwf	pattern2@i_57,f
   679     0793  1803               	skipnc
   680     0794  0AF6               	incf	pattern2@i_57+1,f
   681     0795  30FF               	movlw	255
   682     0796  07F6               	addwf	pattern2@i_57+1,f
   683     0797                     l644:
   684     0797  1FF6               	btfss	pattern2@i_57+1,7
   685     0798  2F9A               	goto	u81
   686     0799  2F9B               	goto	u80
   687     079A                     u81:
   688     079A  2F76               	goto	l638
   689     079B                     u80:
   690     079B                     l24:
   691     079B  0008               	return
   692     079C                     __end_of_pattern2:
   693                           
   694                           	psect	text4
   695     079C                     __ptext4:	
   696 ;; *************** function _pattern1 *****************
   697 ;; Defined at:
   698 ;;		line 12 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  i               2    5[COMMON] int 
   703 ;;  i               2    3[COMMON] int 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0, btemp+1
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         4       0       0       0       0
   715 ;;      Temps:          3       0       0       0       0
   716 ;;      Totals:         7       0       0       0       0
   717 ;;Total ram usage:        7 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726     079C                     _pattern1:	
   727                           ;psect for function _pattern1
   728                           
   729     079C                     l590:	
   730                           ;incstack = 0
   731                           ; Regs used in _pattern1: [wreg+status,2+status,0+btemp+1]
   732                           
   733                           
   734                           ;main.c: 13:     for (int i = 7; i >= 0; i--) {
   735     079C  01F3               	clrf	pattern1@i
   736     079D  01F4               	clrf	pattern1@i+1
   737     079E                     l596:
   738                           
   739                           ;main.c: 14:         PORTD |= (1 << i);
   740     079E  3001               	movlw	1
   741     079F  00F0               	movwf	??_pattern1
   742     07A0  0A73               	incf	pattern1@i,w
   743     07A1  2FA4               	goto	u14
   744     07A2                     u15:
   745     07A2  1003               	clrc
   746     07A3  0DF0               	rlf	??_pattern1,f
   747     07A4                     u14:
   748     07A4  3EFF               	addlw	-1
   749     07A5  1D03               	skipz
   750     07A6  2FA2               	goto	u15
   751     07A7  0870               	movf	??_pattern1,w
   752     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   753     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   754     07AA  0488               	iorwf	8,f	;volatile
   755     07AB                     l598:
   756                           
   757                           ;main.c: 15:         _delay((unsigned long)((500)*(4000000/4000.0)));
   758     07AB  3003               	movlw	3
   759     07AC  00F2               	movwf	??_pattern1+2
   760     07AD  308A               	movlw	138
   761     07AE  00F1               	movwf	??_pattern1+1
   762     07AF  3055               	movlw	85
   763     07B0  00F0               	movwf	??_pattern1
   764     07B1                     u197:
   765     07B1  0BF0               	decfsz	??_pattern1,f
   766     07B2  2FB1               	goto	u197
   767     07B3  0BF1               	decfsz	??_pattern1+1,f
   768     07B4  2FB1               	goto	u197
   769     07B5  0BF2               	decfsz	??_pattern1+2,f
   770     07B6  2FB1               	goto	u197
   771     07B7  2FB8               	nop2
   772     07B8                     l600:
   773                           
   774                           ;main.c: 16:     }
   775     07B8  3001               	movlw	1
   776     07B9  07F3               	addwf	pattern1@i,f
   777     07BA  1803               	skipnc
   778     07BB  0AF4               	incf	pattern1@i+1,f
   779     07BC  3000               	movlw	0
   780     07BD  07F4               	addwf	pattern1@i+1,f
   781     07BE                     l602:
   782     07BE  0874               	movf	pattern1@i+1,w
   783     07BF  3A80               	xorlw	128
   784     07C0  00FF               	movwf	btemp+1
   785     07C1  3080               	movlw	128
   786     07C2  027F               	subwf	btemp+1,w
   787     07C3  1D03               	skipz
   788     07C4  2FC7               	goto	u25
   789     07C5  3008               	movlw	8
   790     07C6  0273               	subwf	pattern1@i,w
   791     07C7                     u25:
   792     07C7  1C03               	skipc
   793     07C8  2FCA               	goto	u21
   794     07C9  2FCB               	goto	u20
   795     07CA                     u21:
   796     07CA  2F9E               	goto	l596
   797     07CB                     u20:
   798     07CB                     l604:
   799                           
   800                           ;main.c: 17:     for (int i = 7; i >= 0; i--) {
   801     07CB  01F5               	clrf	pattern1@i_54
   802     07CC  01F6               	clrf	pattern1@i_54+1
   803     07CD                     l610:
   804                           
   805                           ;main.c: 18:         PORTD &= ~(1 << i );
   806     07CD  3001               	movlw	1
   807     07CE  00F0               	movwf	??_pattern1
   808     07CF  0A75               	incf	pattern1@i_54,w
   809     07D0  2FD3               	goto	u34
   810     07D1                     u35:
   811     07D1  1003               	clrc
   812     07D2  0DF0               	rlf	??_pattern1,f
   813     07D3                     u34:
   814     07D3  3EFF               	addlw	-1
   815     07D4  1D03               	skipz
   816     07D5  2FD1               	goto	u35
   817     07D6  0870               	movf	??_pattern1,w
   818     07D7  3AFF               	xorlw	255
   819     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   820     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   821     07DA  0588               	andwf	8,f	;volatile
   822     07DB                     l612:
   823                           
   824                           ;main.c: 19:         _delay((unsigned long)((500)*(4000000/4000.0)));
   825     07DB  3003               	movlw	3
   826     07DC  00F2               	movwf	??_pattern1+2
   827     07DD  308A               	movlw	138
   828     07DE  00F1               	movwf	??_pattern1+1
   829     07DF  3055               	movlw	85
   830     07E0  00F0               	movwf	??_pattern1
   831     07E1                     u207:
   832     07E1  0BF0               	decfsz	??_pattern1,f
   833     07E2  2FE1               	goto	u207
   834     07E3  0BF1               	decfsz	??_pattern1+1,f
   835     07E4  2FE1               	goto	u207
   836     07E5  0BF2               	decfsz	??_pattern1+2,f
   837     07E6  2FE1               	goto	u207
   838     07E7  2FE8               	nop2
   839     07E8                     l614:
   840                           
   841                           ;main.c: 20:     }
   842     07E8  3001               	movlw	1
   843     07E9  07F5               	addwf	pattern1@i_54,f
   844     07EA  1803               	skipnc
   845     07EB  0AF6               	incf	pattern1@i_54+1,f
   846     07EC  3000               	movlw	0
   847     07ED  07F6               	addwf	pattern1@i_54+1,f
   848     07EE                     l616:
   849     07EE  0876               	movf	pattern1@i_54+1,w
   850     07EF  3A80               	xorlw	128
   851     07F0  00FF               	movwf	btemp+1
   852     07F1  3080               	movlw	128
   853     07F2  027F               	subwf	btemp+1,w
   854     07F3  1D03               	skipz
   855     07F4  2FF7               	goto	u45
   856     07F5  3008               	movlw	8
   857     07F6  0275               	subwf	pattern1@i_54,w
   858     07F7                     u45:
   859     07F7  1C03               	skipc
   860     07F8  2FFA               	goto	u41
   861     07F9  2FFB               	goto	u40
   862     07FA                     u41:
   863     07FA  2FCD               	goto	l610
   864     07FB                     u40:
   865     07FB                     l17:
   866     07FB  0008               	return
   867     07FC                     __end_of_pattern1:
   868     0002                     ___latbits      equ	2
   869     007E                     btemp           set	126	;btemp
   870     007E                     wtemp0          set	126
   871                           
   872                           	psect	config
   873                           
   874                           ;Config register CONFIG @ 0x2007
   875                           ;	Oscillator Selection bits
   876                           ;	FOSC = 0x3, unprogrammed default
   877                           ;	Watchdog Timer Enable bit
   878                           ;	WDTE = OFF, WDT disabled
   879                           ;	Power-up Timer Enable bit
   880                           ;	PWRTE = 0x1, unprogrammed default
   881                           ;	Brown-out Reset Enable bit
   882                           ;	BOREN = 0x1, unprogrammed default
   883                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   884                           ;	LVP = 0x1, unprogrammed default
   885                           ;	Data EEPROM Memory Code Protection bit
   886                           ;	CPD = 0x1, unprogrammed default
   887                           ;	Flash Program Memory Write Enable bits
   888                           ;	WRT = 0x3, unprogrammed default
   889                           ;	In-Circuit Debugger Mode bit
   890                           ;	DEBUG = 0x1, unprogrammed default
   891                           ;	Flash Program Memory Code Protection bit
   892                           ;	CP = 0x1, unprogrammed default
   893     2007                     	org	8199
   894     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pattern1
    _main->_pattern2

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     180
                           _pattern1
                           _pattern2
                           _pattern3
                           _pattern4
 ---------------------------------------------------------------------------------
 (1) _pattern4                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _pattern3                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _pattern2                                             7     7      0      90
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _pattern1                                             7     7      0      90
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pattern1
   _pattern2
   _pattern3
   _pattern4

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue May 06 18:39:25 2025

                     l30 0712                       l24 079B                       l40 073B  
                     l17 07FB                       l27 06EF                       l36 0727  
                     l38 0731                       u20 07CB                       u21 07CA  
                     u14 07A4                       u15 07A2                       u40 07FB  
                     u41 07FA                       u25 07C7                       u34 07D3  
                     u35 07D1                       u60 0772                       u45 07F7  
                     u61 0771                       u54 0754                       u55 0752  
                     u80 079B                       u81 079A                       u74 077C  
                     u90 0721                       u75 077A                       u91 0720  
                    l600 07B8                      l610 07CD                      l602 07BE  
                    l612 07DB                      l604 07CB                      l614 07E8  
                    l630 076E                      l616 07EE                      l640 0784  
                    l632 0772                      l624 074E                      l642 0791  
                    l626 075B                      l618 074A                      l650 06DE  
                    l644 0797                      l628 0768                      l652 06F0  
                    l660 0717                      l590 079C                      l638 0776  
                    l646 06CD                      l654 06F4                      l670 073F  
                    l662 071B                      l648 06D1                      l656 0701  
                    l672 0745                      l664 0721                      l666 072B  
                    l658 0713                      l596 079E                      l668 0735  
                    l598 07AB                      u100 072B                      u101 072A  
                    u110 0735                      u111 0734                      u120 073F  
                    u121 073E                      u207 07E1                      u137 06FA  
                    u147 070B                      u157 06D7                      u167 06E8  
                    u177 0761                      u187 078A                      u197 07B1  
                   _main 0713                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 074A                   ??_main 0077  
       __end_of_pattern1 07FC         __end_of_pattern2 079C         __end_of_pattern3 06F0  
       __end_of_pattern4 0713  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0713                ?_pattern1 0070                ?_pattern2 0070  
              ?_pattern3 0070                ?_pattern4 0070                  __ptext1 06F0  
                __ptext2 06CD                  __ptext3 074A                  __ptext4 079C  
   end_of_initialization 07FC               ??_pattern1 0070               ??_pattern2 0070  
             ??_pattern3 0070               ??_pattern4 0070                _PORTBbits 0006  
    start_initialization 07FC                ___latbits 0002             pattern1@i_54 0075  
           pattern2@i_57 0075                pattern1@i 0073                pattern2@i 0073  
               _pattern1 079C                 _pattern2 074A                 _pattern3 06CD  
               _pattern4 06F0  
